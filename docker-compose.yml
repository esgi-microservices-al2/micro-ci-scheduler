version: '3'
services:
    api:
        build: .
        restart: always
        networks:
            - goyave-backend
        ports:
            - '8080:8080'
        depends_on:
            - postgres
            - rabbitmq
            - consul
        volumes:
            - .:/app
    rabbitmq:
        image: rabbitmq:3-management
        restart: on-failure
        networks:
            - goyave-backend
        ports:
            - '5672:5672'
            - '15672:15672'
        healthcheck:
            test: [ "CMD", "nc", "-z", "localhost", "5672" ]
            interval: 5s
            timeout: 10s
            retries: 10

    consul:
        image: consul
        restart: on-failure
        networks: 
            - goyave-backend
        ports: 
            - '8500:8500'
            - '8600:8600'
        healthcheck:
            test: [ "CMD", "nc", "-z", "localhost", "8500" ]
            interval: 5s
            timeout: 10s
            retries: 10

    postgres:
        image: postgres
        environment:
            POSTGRES_USER: goyave
            POSTGRES_PASSWORD: secret
            POSTGRES_DB: goyave
        networks:
            - goyave-backend
        restart: on-failure
        volumes:
            - databaseVolume:/var/lib/postgresql/data/
        healthcheck:
            test: ["CMD", 'pg_isready -U postgres'] 
            interval: 5s
            timeout: 10s
            retries: 20                
volumes:
    databaseVolume: {}
networks:
    goyave-backend:
        driver: bridge