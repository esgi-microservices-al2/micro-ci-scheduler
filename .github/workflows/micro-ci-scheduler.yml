name: ESGI Micro CI Scheduler

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - 'v*.*.*'
  pull_request:
    branches:
      - '**'

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run lint
      uses: actions-contrib/golangci-lint@v1

  tests:
    name: Unit and integrations tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.2
        env:
          POSTGRES_USER: goyave
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: goyave
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: 1.14
    - name: Run tests
      run: |
        go test -v -race ./...

  build:
    name: Build Micro CI Scheduler Project
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-go@v2
      with:
        go-version: 1.14
    - name: Build
      run: |
        go build -ldflags "-w -s"
    - name: Upload executable artifact
      uses: actions/upload-artifact@v1
      with:
        name: micro-ci-scheduler
        path: micro-ci-scheduler

  # Uncomment and replace {userName} by your account folder name
  deploy:
    name: Build/Publish Docker Images to DockerHub & Deploy to Azure VM
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout Project
      uses: actions/checkout@v1

    - name: Build & Publish Docker Image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: micro-ci-al2/micro-ci-scheduler
        tag_with_ref: true
        dockerfile: Dockerfile.prod
        build_args: RABBIT_MQ_HOSTNAME=${{secrets.RABBIT_MQ_HOSTNAME}},RABBIT_MQ_USERNAME=${{secrets.RABBIT_MQ_USERNAME}},RABBIT_MQ_PORT=${{secrets.RABBIT_MQ_PORT}},RABBIT_MQ_PASSWORD=${{secrets.RABBIT_MQ_PASSWORD}},CONSUL_HOSTNAME=${{secrets.CONSUL_HOSTNAME}},DB_HOSTNAME=${{secrets.DB_HOSTNAME}},DB_PORT=${{secrets.DB_PORT}},DB_USERNAME=${{secrets.DB_USERNAME}},DB_NAME=${{secrets.DB_NAME}},DB_PASSWORD=${{secrets.DB_PASSWORD}},CONSUL_TOKEN=${{secrets.CONSUL_TOKEN}},

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az vm run-command invoke \
          -g ${{ secrets.AZURE_RESOURCE_GRP }} \ 
          -n ${{ secrets.AZURE_VM }} \
          --command-id RunShellScript --scripts \
          "cd ${{ secrets.FOLDER_PATH }} \
          && export RABBIT_MQ_USERNAME=${{secrets.RABBIT_MQ_USERNAME}} \
          && export RABBIT_MQ_HOSTNAME=${{secrets.RABBIT_MQ_HOSTNAME}} \
          && export RABBIT_MQ_PASSWORD=${{secrets.RABBIT_MQ_PASSWORD}} \
          && export RABBIT_MQ_PORT=${{secrets.RABBIT_MQ_PORT}} \
          && export CONSUL_HOSTNAME=${{secrets.CONSUL_HOSTNAME}} \
          && export CONSUL_TOKEN=${{secrets.CONSUL_TOKEN}} \
          && export DB_HOSTNAME=${{secrets.DB_HOSTNAME}} \
          && export DB_PORT=${{secrets.DB_PORT}} \
          && export DB_USERNAME=${{secrets.DB_USERNAME}} \
          && export DB_PASSWORD=${{secrets.DB_PASSWORD}} \
          && export DB_NAME=${{secrets.DB_NAME}} \ 
          && wget -q https://raw.githubusercontent.com/esgi-microservices-al2/micro-ci-scheduler/master/.github/azure/docker-compose.yml -O docker-compose.yml \ 
          && docker-compose stop \
          && docker-compose rm \
          && docker-compose up -d"